---
activemq::admin_password: 'password'
activemq::admin_user: 'admin'
activemq::bootstrap_template: 'activemq/bootstrap.xml.epp'
activemq::broker_template: 'activemq/broker.xml.epp'
activemq::checksum: ~
activemq::checksum_type: 'sha512'
activemq::cluster: false
activemq::cluster_name: ~
activemq::cluster_password: 'clusterpassword'
activemq::cluster_user: 'clusteradmin'
activemq::cluster_topology: {}
activemq::distribution_name: 'apache-artemis'
# NOTE: Only the CURRENT release is available from Apache's mirror sites.
# All older releases are ONLY available from Apache's archive site.
activemq::download_url: "http://archive.apache.org/dist/activemq/activemq-artemis/%{lookup('activemq::version')}/%%{}s"
activemq::gid: 15000
activemq::group: 'activemq'
activemq::hawtio_role: 'amq'
activemq::install_base: '/opt'
activemq::instance_defaults:
  acceptors:
    artemis:
      enable: true
      port: "%{lookup('activemq::port')}"
      protocols:
        - 'CORE'
        - 'AMQP'
      settings:
        - 'amqpCredits=1000'
        - 'amqpLowCredits=300'
        - 'amqpMinLargeMessageSize=102400'
        - 'amqpDuplicateDetection=true'
    amqp:
      enable: true
      port: 5672
      protocols:
        - 'AMQP'
      settings:
        - 'amqpCredits=1000'
        - 'amqpLowCredits=300'
        - 'amqpMinLargeMessageSize=102400'
        - 'amqpDuplicateDetection=true'
    hortneq:
      enable: false
      port: 5445
      protocols:
        - 'HORNETQ'
        - 'STOMP'
      settings:
        - 'anycastPrefix=jms.queue.'
        - 'multicastPrefix=jms.topic.'
    mqtt:
      enable: false
      port: 1883
      protocols:
        - 'MQTT'
    stomp:
      enable: false
      port: 61613
      protocols:
        - 'STOMP'
  # Shared settings that should be used for ALL acceptors.
  acceptor_settings:
    - 'tcpSendBufferSize=1048576'
    - 'tcpReceiveBufferSize=1048576'
    - 'amqpMinLargeMessageSize=102400'
    - 'useEpoll=true'
  # Global address settings. Individual settings can also be managed
  # in $addresses.
  address_settings:
    management:
      match: 'activemq.management#'
      enable: true
      settings:
        address-full-policy: 'PAGE'
        auto-create-addresses: true
        auto-create-jms-queues: true
        auto-create-jms-topics: true
        auto-create-queues: true
        dead-letter-address: 'DLQ'
        expiry-address: 'ExpiryQueue'
        max-size-bytes: -1
        message-counter-history-day-limit: 10
        redelivery-delay: 0
    catchall:
      match: '#'
      enable: true
      settings:
        address-full-policy: 'PAGE'
        auto-create-addresses: true
        auto-create-jms-queues: true
        auto-create-jms-topics: true
        auto-create-queues: true
        config-delete-addresses: 'OFF'
        config-delete-diverts: 'OFF'
        config-delete-queues: 'OFF'
        dead-letter-address: 'DLQ'
        expiry-address: 'ExpiryQueue'
        max-size-bytes: -1
        message-counter-history-day-limit: 10
        redelivery-delay: 0
  addresses:
    DLQ:
      enable: true
      type: 'anycast'
      queues:
        DLQ: {}
    ExpiryQueue:
      enable: true
      type: 'anycast'
      queues:
        ExpiryQueue: {}
    FilterExample:
      enable: false
      type: 'anycast'
      queues:
        FilterExample:
          filters:
            - "color='red'"
    SettingsExample:
      enable: false
      type: 'anycast'
      queues:
        SettingsExample: {}
      # Manage address settings. This way it is not necessary to
      # duplicate this entry in global $address_settings.
      settings:
        max-delivery-attempts: 10
        max-redelivery-delay: 100000
        redelivery-collision-avoidance-factor: '0.15'
        redelivery-delay: 5000
        redelivery-delay-multiplier: '1.5'
      # An optional wildcard that will be used when adding the address settings.
      wildcard: '#'
  allow_direct_connections_only: false
  allow_failback: true
  bind: '%{facts.networking.fqdn}'
  broadcast_groups:
    - name: 'bg-group1'
      group_address: '231.7.7.7'
      group_port: 9876
      broadcast_period: 5000
  broker_plugins:
    org.apache.activemq.artemis.core.server.plugin.impl.LoggingActiveMQServerPlugin:
      enable: false
      properties:
        LOG_ALL_EVENTS: true
        LOG_CONNECTION_EVENTS: true
        LOG_CONSUMER_EVENTS: true
        LOG_DELIVERING_EVENTS: true
        LOG_INTERNAL_EVENTS: true
        LOG_SENDING_EVENTS: true
        LOG_SESSION_EVENTS: true
  check_for_live_server: true
  connectors: {}
  discovery_groups:
    - name: 'dg-group1'
      group_address: '231.7.7.7'
      group_port: 9876
      refresh_timeout: 10000
  failover_on_shutdown: true
  ha_policy: 'replication'
  initial_replication_sync_timeout: 30000
  jmx:
    cors_allow_origin:
      - '*://localhost*'
  journal_buffer_timeout: 2500000
  journal_datasync: true
  journal_max_io: 4096
  journal_type: 'asyncio'
  log_level:
    artemis: 'INFO'
    audit.base: 'ERROR'
    audit.message: 'ERROR'
    audit.resource: 'ERROR'
    console: 'ERROR'
    jetty: 'WARN'
    root: 'INFO'
  log4j_level:
    analyzer: 'INFO'
    artemis: 'INFO'
    audit: 'OFF'
    curator: 'WARN'
    jetty: 'WARN'
    root: 'INFO'
    zookeeper: 'ERROR'
  management_notification_address: 'activemq.notifications'
  max_disk_usage: 90
  max_hops: 1
  message_load_balancing: 'on_demand'
  persistence: true
  port: 61616
  role: 'master'
  security:
    enable: true
    # The default security rule to grant management access.
    management:
      # This is a magic name to generate the <default-access> tag.
      default-access:
        enable: true
        domain: 'org.apache.activemq.artemis'
        methods:
          'list*': 'amq'
          'get*': 'amq'
          'is*': 'amq'
          'set*': 'amq'
          '*': 'amq'
      # This generates a new <match> tag inside <role-access>.
      ArtemisDefault:
        enable: true
        domain: 'org.apache.activemq.artemis'
        methods:
          'list*': 'amq'
          'get*': 'amq'
          'is*': 'amq'
          'set*': 'amq'
          '*': 'amq'
    # Connectors for the management API.
    management_connectors:
      Local:
        enable: false
        host: 'localhost'
        port: 1099
    settings:
      # The default security rule to grant all rights to the admin user.
      Catchall:
        enable: true
        match: '#'
        # Grant permissions to roles. Use a comma-separated list to specify
        # multiple roles.
        permissions:
          browse: 'amq'
          consume: 'amq'
          createAddress: 'amq'
          createDurableQueue: 'amq'
          createDurableQueue: 'amq'
          deleteAddress: 'amq'
          deleteDurableQueue: 'amq'
          deleteNonDurableQueue: 'amq'
          # required, otherwise ./artemis data imp wouldn't work
          manage: 'amq'
          send: 'amq'
    # NOTE: The main admin user should not be added to this user list. It should
    # be configured using $admin_user and $admin_password instead.
    users:
      myuser:
        enable: false
        password: 'secret'
        # Assign roles to this user. Use 'true' to enable and 'false' to
        # disable a role. Roles that are not listed here are not enabled
        # for this user.
        roles:
          amq: true
  vote_on_replication_failure: true
  web_bind: 'localhost'
  web_port: 8161
activemq::instances: {}
activemq::instances_base: '/var/lib/activemq-brokers'
activemq::java_args:
  'XX:+PrintClassHistogram': ''
  'XX:+UseG1GC': ''
  'XX:+UseStringDeduplication': ''
  'Xms': "%{lookup('activemq::java_xms')}"
  'Xmx': "%{lookup('activemq::java_xmx')}"
  'Dhawtio.realm=activemq': ''
  'Dhawtio.offline=true': ''
  'Dhawtio.rolePrincipalClasses=org.apache.activemq.artemis.spi.core.security.jaas.RolePrincipal': ''
  'Djolokia.policyLocation=${ARTEMIS_INSTANCE_ETC_URI}jolokia-access.xml': ''
activemq::java_xms: '512M'
activemq::java_xmx: '2G'
activemq::jolokia_access_template: 'activemq/jolokia-access.xml.epp'
activemq::log4j_template: 'activemq/log4j2.properties.epp'
activemq::logging_template: 'activemq/logging.properties.epp'
activemq::login_template: 'activemq/login.config.epp'
activemq::manage_account: true
activemq::manage_instances_base: true
activemq::manage_roles: true
activemq::manage_users: true
activemq::management_template: 'activemq/management.xml.epp'
activemq::port: 61616
activemq::proxy_server: ~
activemq::proxy_type: 'none'
activemq::roles_properties_template: 'activemq/roles.properties.epp'
activemq::server_discovery: 'dynamic'
activemq::service_enable: true
activemq::service_ensure: 'running'
activemq::service_file: "/etc/systemd/system/%{lookup('activemq::service_name')}@.service"
activemq::service_name: 'activemq'
activemq::service_template: 'activemq/service_systemd.epp'
activemq::symlink_name: 'activemq'
activemq::uid: 15000
activemq::user: 'activemq'
activemq::users_properties_template: 'activemq/users.properties.epp'
activemq::version: ~
