<?xml version='1.0'?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<configuration xmlns="urn:activemq"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xi="http://www.w3.org/2001/XInclude"
               xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">

   <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="urn:activemq:core ">

      <name><%= $name %></name>
      <persistence-enabled><%= $persistence %></persistence-enabled>
      <journal-type><%= $journal_type %></journal-type>

      <paging-directory>data/paging</paging-directory>
      <bindings-directory>data/bindings</bindings-directory>
      <journal-directory>data/journal</journal-directory>
      <large-messages-directory>data/large-messages</large-messages-directory>

      <journal-datasync><%= $journal_datasync %></journal-datasync>
      <journal-min-files>2</journal-min-files>
      <journal-pool-files>10</journal-pool-files>
      <journal-device-block-size>4096</journal-device-block-size>
      <journal-file-size>10M</journal-file-size>
      <journal-buffer-timeout><%= $journal_buffer_timeout %></journal-buffer-timeout>
      <journal-max-io><%= $journal_max_io %></journal-max-io>

      <connectors>
<% $connectors.each |$key, $value| { -%>
         <connector name="<%= $key %>">tcp://<%= $value['bind'] %>:<%= $value['port'] %></connector>
<% } -%>
      </connectors>

      <disk-scan-period>5000</disk-scan-period>
      <max-disk-usage><%= $max_disk_usage %></max-disk-usage>
      <page-sync-timeout>1120000</page-sync-timeout>

<% if !empty($global_max_size_mb) { -%>
      <global-max-size><%= $global_max_size_mb %>Mb</global-max-size>
<% } -%>

      <critical-analyzer>true</critical-analyzer>
      <critical-analyzer-timeout>120000</critical-analyzer-timeout>
      <critical-analyzer-check-period>60000</critical-analyzer-check-period>
      <critical-analyzer-policy>HALT</critical-analyzer-policy>
      
      <acceptors>
<% $acceptors.each |$key, $value| { -%>
<%#  # check if acceptor is enabled (defaults to true) -%>
<%   if (!('enable' in $value) or $value['enable'] == true) { -%>
         <acceptor name="<%= $key %>">tcp://<%= $bind %>:<%= $value['port'] %>?protocols=<%= $value['protocols_list'] %><% if !empty($value['settings_list']) { %><%= ";${value['settings_list']}" %><% } %></acceptor>
<%   } -%>
<% } -%>
      </acceptors>

<% if $activemq::cluster { -%>
      <cluster-user><%= $cluster_user %></cluster-user>
      <cluster-password><%= $cluster_password %></cluster-password>

<%   if $activemq::server_discovery == 'dynamic' { -%>

<%     if !empty($broadcast_groups) { -%>
      <broadcast-groups>
<%       $broadcast_groups.each |$item| { -%>
<%         if !empty($item['name']) { -%>
         <broadcast-group name="<%= $item['name'] %>">
<%           if $item['group_address'] { -%>
            <group-address><%= $item['group_address'] %></group-address>
<%           } else { -%>
            <group-address>231.7.7.7</group-address>
<%           } -%>
<%           if $item['group_port'] { -%>
            <group-port><%= $item['group_port'] %></group-port>
<%           } else { -%>
            <group-port>9876</group-port>
<%           } -%>
<%           if $item['broadcast_period'] { -%>
            <broadcast-period><%= $item['broadcast_period'] %></broadcast-period>
<%           } else { -%>
            <broadcast-period>5000</broadcast-period>
<%           } -%>
<%#          # Only add the connector that matches the name of this instance. -%>
<%           $connectors.each |$key, $value| { -%>
<%             if ($key == "artemis-${name}") { -%>
            <connector-ref><%= $key %></connector-ref>
<%             } -%>
<%           } -%>
         </broadcast-group>
<%         } -%>
<%       } -%>
      </broadcast-groups>
<%     } -%>

<%     if !empty($discovery_groups) { -%>
      <discovery-groups>
<%       $discovery_groups.each |$item| { -%>
<%         if !empty($item['name']) { -%>
         <discovery-group name="<%= $item['name'] %>">
<%           if $item['group_address'] { -%>
            <group-address><%= $item['group_address'] %></group-address>
<%           } else { -%>
            <group-address>231.7.7.7</group-address>
<%           } -%>
<%           if $item['group_port'] { -%>
            <group-port><%= $item['group_port'] %></group-port>
<%           } else { -%>
            <group-port>9876</group-port>
<%           } -%>
<%           if $item['refresh_timeout'] { -%>
            <refresh-timeout><%= $item['refresh_timeout'] %></refresh-timeout>
<%           } else { -%>
            <refresh-timeout>10000</refresh-timeout>
<%           } -%>
         </discovery-group>
<%         } -%>
<%       } -%>
      </discovery-groups>
<%     } -%>

<%   } -%>

      <cluster-connections>
         <cluster-connection name="<%= $activemq::cluster_name %>">
<%#  # Only add the connector that matches the name of this instance. -%>
<%   $connectors.each |$key, $value| { -%>
<%     if ($key == "artemis-${name}") { -%>
            <connector-ref><%= $key %></connector-ref>
<%     } -%>
<%   } -%>
            <message-load-balancing><%= $message_load_balancing %></message-load-balancing>
            <max-hops><%= $max_hops %></max-hops>
<%   if $activemq::server_discovery == 'static' { -%>
            <static-connectors allow-direct-connections-only="true">
<%   $connectors.each |$key, $value| { -%>
               <connector-ref><%= $key %></connector-ref>
<%   } -%>
            </static-connectors>
<%   } -%>
         </cluster-connection>
      </cluster-connections>

<%   if $ha_policy { -%>
      <ha-policy>
         <<%= $ha_policy %>>
<%     if $ha_policy == 'replication' or $ha_policy == 'shared-storage' { -%>
            <<%= $role %>>
<%       if !empty($group) { -%>
               <group-name><%= $group %></group-name>
<%       } -%>
               <cluster-name><%= $activemq::cluster_name %></cluster-name>
<%       if $ha_policy == 'replication' { -%>
               <initial-replication-sync-timeout><%= $initial_replication_sync_timeout %></initial-replication-sync-timeout>
<%         if $check_for_live_server and $role == 'master' { -%>
               <check-for-live-server>true</check-for-live-server>
<%         } -%>
<%         if $vote_on_replication_failure and $role == 'master' { -%>
               <vote-on-replication-failure>true</vote-on-replication-failure>
<%         } -%>
<%       } -%>
<%       if $ha_policy == 'shared-storage' { -%>
<%         if $failover_on_shutdown and $role == 'master' { -%>
               <failover-on-shutdown>true</failover-on-shutdown>
<%         } -%>
<%       } -%>
<%       if $allow_failback and $role == 'slave' { -%>
               <allow-failback>true</allow-failback>
<%       } -%>
            </<%= $role %>>
<%     } -%>
         </<%= $ha_policy %>>
      </ha-policy>
<%   } -%>
<% } -%>

<%   if (('enable' in $security) and ($security['enable'] == true)) { -%>
      <security-settings>
<%#    # Iterate over all security settings. -%>
<%     if (('settings' in $security) and ($security['settings'] =~ Hash)) { -%>
<%       $security['settings'].each |$s_key, $s_value| { -%>
<%#        # Only add enabled items. -%>
<%         if (($s_value =~ Hash) and ('enable' in $s_value) and ($s_value['enable'] == true)) { -%>
         <security-setting match="<%= $s_value['match'] %>">
<%#          # Add permissions. -%>
<%           if (('permissions' in $s_value) and ($s_value['permissions'] =~ Hash)) { -%>
<%             $s_value['permissions'].each |$key, $value| { -%>
            <permission type="<%= $key %>" roles="<%= $value %>"/>
<%             } -%>
<%           } -%>
         </security-setting>
<%         } -%>
<%       } -%>
<%     } -%>
      </security-settings>
<%   } -%>

      <address-settings>
<%#  # Iterate over all global address settings. -%>
<%   if ($address_settings =~ Hash) { -%>
<%     $address_settings.each |$a_key, $a_value| { -%>
<%#      # Only add enabled items. -%>
<%       if (($a_value =~ Hash) and ('enable' in $a_value) and ($a_value['enable'] == true)) { -%>
         <address-setting match="<%= $a_value['match'] %>">
<%#        # Add settings. -%>
<%         if (('settings' in $a_value) and ($a_value['settings'] =~ Hash)) { -%>
<%           $a_value['settings'].each |$key, $value| { -%>
            <<%= $key %>><%= $value%></<%= $key %>>
<%           } -%>
<%         } -%>
         </address-setting>
<%       } -%>
<%     } -%>
<%   } -%>
<%#  # Iterate over all addresses to find individual settings. -%>
<%   if ($addresses =~ Hash) { -%>
<%     $addresses.each |$a_key, $a_value| { -%>
<%#      # Only add enabled items. -%>
<%       if (($a_value =~ Hash) and ('enable' in $a_value) and ($a_value['enable'] == true)) { -%>
<%#        # Search for address settings and add them. -%>
<%         if (('settings' in $a_value) and ($a_value['settings'] =~ Hash)) { -%>
<%#          # Check if a wildcard is configured. -%>
<%           if ('wildcard' in $a_value) { -%>
         <address-setting match="<%= $a_key %><%= $a_value['wildcard'] %>">
<%           } else { -%>
         <address-setting match="<%= $a_key %>">
<%           } -%>
<%#          # Add settings. -%>
<%           $a_value['settings'].each |$key, $value| { -%>
            <<%= $key %>><%= $value%></<%= $key %>>
<%           } -%>
         </address-setting>
<%         } -%>
<%       } -%>
<%     } -%>
<%   } -%>
      </address-settings>

<%   if ($addresses =~ Hash) { -%>
      <addresses>
<%     $addresses.each |$key, $value| { -%>
         <address name="<%= $key %>">
<%#      # Force removal of disabled items. -%>
<%       if (('enable' in $value) and ($value['enable'] == false)) { -%>
           <config-delete-addresses>FORCE</config-delete-addresses>
           <config-delete-diverts>FORCE</config-delete-diverts>
           <config-delete-queues>FORCE</config-delete-queues>
<%       } -%>
<%#      # Add opening tag for routing type. -%>
<%       if ('type' in $value) { -%>
            <<%= $value['type'] %>>
<%       } -%>
<%#      # Iterate over all queues (if available). -%>
<%       if (('queues' in $value) and ($value['queues'] =~ Hash)) { -%>
<%         $value['queues'].each |$q_key, $q_value| { -%>
               <queue name="<%= $q_key %>">
<%#          # Iterate over all filters (if available). -%>
<%           if (('filters' in $q_value) and ($q_value['filters'] =~ Array)) { -%>
<%               $q_value['filters'].each |$filter| { -%>
                 <filter string="<%= $filter %>"/>
<%             } -%>
<%           } -%>
               </queue>
<%         } -%>
<%       } -%>
<%#      # Add closing tag for routing type. -%>
<%       if ('type' in $value) { -%>
            </<%= $value['type'] %>>
<%       } -%>
         </address>
<%     } -%>
      </addresses>
<%   } -%>

<%   if (($broker_plugins =~ Hash) and ($broker_plugins.length > 0)) { -%>
      <broker-plugins>
<%     $broker_plugins.each |$key, $value| { -%>
         <broker-plugin class-name="<%= $key %>">
<%       if (('properties' in $value) and ($value['properties'] =~ Hash)) { -%>
<%         $value['properties'].each |$prop_key, $prop_value| { -%>
            <property key="<%= $prop_key %>" value="<%= $prop_value %>"/>
<%         } -%>
<%       } -%>
         </broker-plugin>
<%     } -%>
      </broker-plugins>
<%   } -%>
   </core>
</configuration>
